<problem>
Define a function called `SumIsEven(a:int, b:int) -> bool` which takes two integer inputs and returns true if and only if the sum of the two values is an even number. If the sum of the input values is an odd number, then the function must return false.

## Example Cases: 
```
SumIsEven(1,1) => True
SumIsEven(1,2) => False
SumIsEven(2,2) => True
SumIsEven(2,3) => False
```
</problem>
<bug_code>
1. def SumIsEven(a, b):
2.	return (a+b) % 2 == 1
3.
</bug_code>
<bug_desc>
The function returns True when `a + b` is not divisible by 2 instead of returning True when `a + b` is divisible by 2.
</bug_desc>
<bug_fixes>
Replace `1` with `0` to ensure that the sum is even.
</bug_fixes>
<unit_tests>
assert SumIsEven(1,1) == True
assert SumIsEven(1,2) == False
assert SumIsEven(2,2) == True
assert SumIsEven(2,3) == False
</unit_tests>
<stu_desc>

</stu_desc>
<dialogue>
User: Hello! I'm working with the `SumIsEven()` function and it is giving me the opposite answer than I am expecting and I'm not sure why that is the case.
Assistant: Hello! I see you're using a modulo operation in your code, can you explain how that operation works in simple terms?
User: From what I understand, it tells you if a number is divisible by another number, right?
Assistant: The modulo operation is capable of doing this, but it actually does more than that. The modulo operation will return the remainder of the division of the two operands. If this is the case, what will be the value of `(a+b) % 2` when `a+b` is even?
	<alt>The modulo operation is more than a divisibility operand. It returns a remainder. Can you explain the significance of that?
User: I'm sorry I think too much is going on in that question and I'm confused. Can you simplify it?
Assistant: Let's break the problem down. Can you create a temporary variable to store `a+b`?
	<alt>Gladly. First, let's change your code into an `if`/`else` condition. When `(a+b)%2==1`, what do you output?
User: Okay, I've changed my code.
<code>
1. def SumIsEven(a, b):
2.    inputSum = a + b
3.	return inputSum % 2 == 1
</code>
Assistant: Okay, now when you do modulo 2 of `inputSum`, what number would be outputted if `inputSum` is even?
	<alt>Given the revised definition of the modulo operation, can you explain what is outputted from an even sum mod 2?
User: Since even numbers are divisible by 2, the remainder would be 0, right?
Assistant: That is correct! And what is the output of `0 == 1`?
User: Oh, that would be False! I needed to change the 1 into a 0 and now it works as expected. Thank you for your help!
<code>
1. def SumIsEven(a, b):
2.    inputSum = a + b
3.	return inputSum % 2 == 0
</code>
Assistant: I'm glad to be of assistance! Is there anything else I can help you with today?
User: No, that's all. Thank you!
</dialogue>