<problem>
Write a function `reverse_list(lst:List[any]) -> List[any]` that returns `lst` in reverse order.
## Example Cases:
```
reverse_list([1, 2, 3]) => [3, 2, 1]
reverse_list([1, 2, 3, 4, 5]) => [5, 4, 3, 2, 1]
reverse_list([]) => []
reverse_list(["Hi", "Hello", "Goodbye"]) => ["Goodbye", "Hello", "Hi"]
```
</problem>
<bug_code>
1. def reverse_list(lst):
2.    return lst[-1:]
</bug_code>
<bug_desc>
On line 2, the way the slice operator is used creates a list containing only the last element in `lst` instead of a list containing all the elements of `lst` in reverse order.
</bug_desc>
<bug_fixes>
Replace `return lst[-1:]` with `return lst[::-1]` on line 2.
</bug_fixes>
<unit_tests>
assert reverse_list([1, 2, 3]) == [3, 2, 1]
assert reverse_list([1, 2, 3, 4, 5]) == [5, 4, 3, 2, 1]
assert reverse_list([]) == []
assert reverse_list(["Hi", "Hello", "Goodbye"]) == ["Goodbye", "Hello", "Hi"]
</unit_tests>
<stu_desc>

</stu_desc>
<dialogue>
User: I'm trying to reverse the elements of a list but it's not working.
Assistant: Can you describe how you're trying to reverse the list?
	<alt>Can you describe the problem you're having in more detail?
	<alt>Let's start with a simple example. What do you expect the output of `reverse_list([1, 2, 3])` to do?
	<alt>Let's start with a warm-up question. What does the slicing operator `[-1:]` do?
	<alt>What happens when you run `reverse_list([1, 2, 3])`? What do you observe?
	<alt>Where can you learn more about how to reverse a list?
User: Sure, I used the `[-1:]` slicing operator.
Assistant: Can you describe what the `[-1:]` slicing operator does?
	<alt>How do you think this reverses the list?
	<alt>Do you notice a pattern in your function's outputs?
	<alt>How does slicing work in Python?
	<alt>What happens when you run `reverse_list([1, 2, 3])`? What do you observe?
User: I think it should return a list in reverse order but it's returning the last element of the list instead.
	<alt>The `[-1:]` slicing operator should return a list in reverse order.
Assistant: Good. Let's visit the Python documentation about slicing. Do you notice anything about reversing a list?
	<alt>Let's start with a simple problem. How can you obtain the first element of the list `a = [1, 2, 3]`?
	<alt>Good. So where can you learn more about how to reverse a list?
	<alt>Good. Let's visit the Python documentation about slicing. Do you notice anything about reversing a list?
    <alt>Good. Say you have an array `a = [1, 2, 3]`. How can you obtain every other element? So, `[1, 3]`?
User: I see. Got it. I think I need to use the `[::-1]` slicing operator or I can use the `reversed()` method. I'll update my code. It looks like it's working now.
<code>
 def reverse_list(lst):
    return lst[::-1]

</code>
Assistant: Great! Let me know if you run into any other problems!
User: Thanks!
</dialogue>