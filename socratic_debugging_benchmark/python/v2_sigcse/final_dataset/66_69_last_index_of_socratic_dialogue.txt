<problem>
Write a function called `LastIndexOf(value:int, array:list) -> int` which is passed two inputs: a value to search for, and a list of integers in which to search. This function should return the index position of the last occurrence (i.e. the rightmost occurrence) of the value being searched for. If the value being searched for does not exist in the array, then the function should return -1.

## Example Cases:
```
LastIndexOf(1, [1,1,1,1]) => 3
LastIndexOf(2, [2,0,1,2])  => 3
LastIndexOf(3, [1,1,1,1]) => -1
LastIndexOf(4, [4,1,1,1]) => 0
```
</problem>
<bug_code>
1. def LastIndexOf(value, array):
2.    index = -1
3.    for i in range(len(array)-1, -1):
4.        if(array[i] == value):
5.            index = i
6.            break
7.    return index
</bug_code>
<bug_desc>
On line 3, the range is from `len(array)-1` to `-1`. The `range` function does not iterate when the start is greater than the stop. Consequently, the for loop is not executed and the function always returns -1.
</bug_desc>
<bug_fixes>
Change the `range` function on line 3 to `range(len(array)-1, -1, -1)` to iterate backwards from `len(array)-1 to -1`.
</bug_fixes>
<unit_tests>
assert LastIndexOf(1, [1,1,1,1]) == 3
assert LastIndexOf(2, [2,0,1,2]) == 3
assert LastIndexOf(3, [1,1,1,1]) == -1
assert LastIndexOf(4, [4,1,1,1]) == 0
</unit_tests>
<stu_desc>

</stu_desc>
<dialogue>
User: Help! I'm stuck!
Assistant: Okay, let's go over the code. Does the first test case pass?
	<alt>Where do you think the problem is?
	<alt>Have you completed all parts of the instructions?
User: No, it doesn't pass.
Assistant: Let's start by going over the first line of your function, what does line 1 do?
	<alt>Let's start with your function. What do you think is the most complicated part?
	<alt>Can you describe what your function does?
User: It takes in the array and the value we are looking for.
Assistant: Very good, does line 1 take in both of those things?
	<alt>Very good, let's move on to the next area, what does line 2 do?
	<alt>Very good, what can you explain what else your function is supposed to do?
	<alt>What do you think is the most complicated part of your function?
User: Yes, line 1 does.
Assistant: Okay, let's move on to the next area, what does line 2 do?
	<alt>What is the next thing your function needs to do?
	<alt>Let's check the most complex part of the function for problems next, where would you say that is?
	<alt>Let's make sure your function ends correctly, what value is it returning?
User: It makes the index variable that keeps track of where the value is.
Assistant: What should your function do next?
	<alt>Let's make sure your function ends correctly, what value is it returning?
	<alt>Why do we start index at -1?
User: It needs to loop through the list.
Assistant: Let's examine that loop carefully. What variable controls the loop?
	<alt>Let's examine that loop carefully,  what determines how many times the loop will run?
	<alt>Let's check that loop carefully, how should we move through the list?
	<alt>Is there anything special about how we are moving through the list?
User: The variable i controls the loop.
Assistant: What value should i have on the first iteration of the loop?
	<alt>Let's check that loop carefully, how should we move through the list?
	<alt>Let's examine that loop carefully,  what determines how many times the loop will run?
User: The loop is supposed to start at the highest value in the array minus 1.
Assistant: Is there anything special about how we are moving through the list?
	<alt>Let's check that loop carefully, how should we move through the list?
	<alt>What value should i have at the end of the loop?
User: We are moving through the list backward.
Assistant: Check the Python documentation, how do we iterate in a loop by default?
	<alt>Check the Python documentation, what is the default step?
	<alt>Check the Python documentation, how would we move through a list not incrementing by one each time?
	<alt>Have you ever moved through a list in reverse with range?
User: Oh! In Python it increases by one by default! We are going the wrong way.
Assistant: What would you need do in the code to fix that?
<code>
1. def LastIndexOf(value, array):
2.    index = -1
3.    for i in range(len(array)-1, -1, -1):
4.        if(array[i] == value):
5.            index = i
6.            break
7.    return index
</code>
User: I need to add a -1 step!
Assistant: Does it pass all the test cases?
User: Yes! Thank you!
</dialogue>