<problem>
Define a function called `SumIsEven(int a, int b) -> boolean` which takes two integer inputs and returns true if and only if the sum of the two values is an even number. If the sum of the input values is an odd number, then the function must return false.

## Example Cases: 
```
SumIsEven(1,1) => true
SumIsEven(1,2) => false
SumIsEven(2,2) => true
SumIsEven(2,3) => false
```
</problem>
<bug_code>
1. public static boolean SumIsEven(int a, int b) {
2.     return (a + b) % 2 == 1;
3. }
</bug_code>
<bug_desc>
The function returns true when `a + b` is not divisible by 2 instead of returning true when `a + b` is divisible by 2.
</bug_desc>
<bug_fixes>
Replace `1` with `0` to ensure that the sum is even.
</bug_fixes>
<unit_tests>
assert SumIsEven(1,1) == true;
assert SumIsEven(1,2) == false;
assert SumIsEven(2,2) == true;
assert SumIsEven(2,3) == false;
</unit_tests>
<stu_desc>

</stu_desc>
<dialogue>
User: Hello! I am having trouble making `SumIsEven()` work, and I think I have just managed to make it too complicated to easily debug. Can you help me convert it into an if/else control flow?
Assistant: Hello! I would be more than glad to help you with that. I notice your first line is already returning a boolean value, what if we use that as a condition for our `if` statement? First, let's simplify the problem so it's easier to look at. Can you store `a+b` in a temporary variable?
User: Okay! I've put the sum of a and b into the temporary variable `inputSum` and gone ahead and converted the return into an if/else but it's still not working as intended. Can you give me more guidance?
<code>
1. public static boolean SumIsEven(int a, int b) {
2.     int inputSum = a + b;
3.     if (inputSum % 2 == 1) {
4.         return true;
5.     } else {
6.         return false;
7.     }
8. }
</code>
Assistant: Okay, when `inputSum % 2` is equal to 1, what does that mean about the value of `inputSum`?
	<alt>If `inputSum` is even, what is the output of `inputSum % 2`?
User: Oh, I have my conditions backward! That means that the number is odd, not even. I changed the 1 to a 0 and it works now. Thank you so much for your help!
<code>
1. public static boolean SumIsEven(int a, int b) {
2.     int inputSum = a + b;
3.     if (inputSum % 2 == 0) {
4.         return true;
5.     } else {
6.         return false;
7.     }
8. }
</code>
Assistant: I'm glad to be of assistance. Did you want to ask any other questions today?
User: No, that's all for now. Thank you!
</dialogue>